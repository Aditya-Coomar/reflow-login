datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Contact {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  email   String
  message String
}

// Organization Model
model Organization {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  rootUser   User?  @relation(name: "RootUser", fields: [rootUserId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rootUserId String? @db.ObjectId @unique
  users      User[] @relation(name: "OrganizationUsers")
}

// Product Model
model Product {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  code        String
  user        User?  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId      String? @db.ObjectId
}

// User Model
model User {
  id                   String        @id @default(auto()) @map("_id") @db.ObjectId
  firstName            String
  lastName             String
  email                String        @unique
  password             String
  isAdmin              Boolean       @default(false)
  verifyCode           String?
  verifyCodeExpiry     DateTime?
  isVerified           Boolean       @default(true)
  activationCode       String?
  activationCodeExpiry DateTime?
  isActivated          Boolean       @default(true)
  products             Product[]
  organization         Organization? @relation(name: "OrganizationUsers", fields: [organizationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organizationId       String? @db.ObjectId
  rootOrganization     Organization? @relation(name: "RootUser")
  PasswordResetToken PasswordResetToken []
}
model PasswordResetToken{
id String @id @default(auto()) @map("_id") @db.ObjectId
token String @unique
createdAt DateTime @default(now())
resetAt   DateTime
user User?  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
userId String? @db.ObjectId
}
